import java.util.*;
public class Main
{
public static class node{
    int data;
    node next;
    node(int x){
        data=x;
        next=null;
    }
}
static node add(node head,int x){
    node temp=new node(x);
    if(head==null){
        head=temp;
        return head;
    }
    node temp1=head;
    while(temp1.next!=null){
        temp1=temp1.next;
    }
    temp1.next=temp;
    return head;
}
static node swap(node head){
    node temp2=head;
    while(temp2!=null){
        int t2=temp2.data;
        temp2.data=temp2.next.data;
        temp2.next.data=t2;
        temp2=temp2.next.next;
    }
        node temp3=head;
		while(temp3!=null){
		    System.out.print(temp3.data+" ");
		    temp3=temp3.next;
		}return head;
 
  }
  
  
//   public static node reverse(int head){
//       node prev=null;
//       node curr=head;
//       node next=head.next;
//       while(curr.next!=null){
//           next=curr.next;
//           curr.next=prev;
//           prev=curr;
//           curr=next;
//       }
//       head=prev;
//       return head;
      
//       node temp4=head;
// 		while(temp4!=null){
// 		    System.out.print(temp4.data+" ");
// 		    temp4=temp4.next;
// 		}return head;
//   }
// public static node reverse(node head) {
//     node prev = null;
//     node current = head;
//     node next = null;
//     while (current != null) {
//         next = current.next;
//         current.next = prev;
//         prev = current;
//         current = next;
//     }
//     head=prev;
//   //  return prev;
//   // node head=prev;
//      node temp4=head;
// 		while(temp4!=null){
// 		    System.out.print(temp4.data+" ");
// 		    temp4=temp4.next;
// 		}return head;
// }

	public static void main(String[] args){
		Scanner sc=new Scanner(System.in);
		int n=sc.nextInt();
		node head=new node(-1);
		for(int i=0;i<n;i++){
		   head=add(head,sc.nextInt());
		}
		head=head.next;
		node thead=head;
		while(thead!=null){
		    System.out.print(thead.data +" ");
		    thead=thead.next;
		}
		System.out.println("Swapping of numbers");
		    node swap=new node(-1);
		    head=swap(head);
		  //  node head2=new node(-1);
		  //  head2=reverse(head2);
		}

}
